services:
  # sonarqube:
  #   image: sonarqube:community
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #   environment:
  #     - SONAR_JDBC_URL=jdbc:postgresql://postgresql:5432/sonarqube
  #     - SONAR_JDBC_USERNAME=sonarqube
  #     - SONAR_JDBC_PASSWORD=sonarqube
  #   depends_on:
  #     - postgresql
  #   networks:
  #     - sonarqube-network

  # postgresql:
  #   image: postgres
  #   environment:
  #     - POSTGRES_USER=sonarqube
  #     - POSTGRES_PASSWORD=sonarqube
  #     - POSTGRES_DB=sonarqube
  #   volumes:
  #     - postgresql_data:/var/lib/postgresql/data
  #   networks:
  #     - sonarqube-network

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      # - sonarqube
      - vault
    networks:
      - sonarqube-network
    restart: unless-stopped

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_DEV_ROOT_TOKEN_ID=root-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    privileged: true
    command: server -dev
    networks:
      - sonarqube-network

volumes:
  sonarqube_data:
  postgresql_data:
  jenkins_home:

networks:
  sonarqube-network:
    driver: bridge